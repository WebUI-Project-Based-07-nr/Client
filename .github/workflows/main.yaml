name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      # Checkout the Repo
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Install Node 18
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name : Npm Install
        run: npm install

      - name : Lint
        run : npm run lint

      - name: Run Tests and Generate Coverage
        continue-on-error: true
        run: |
          npx vitest --coverage || true
          echo "List files in coverage directory"
          ls src/tests/coverage || echo "No coverage directory found"

      - name: List Coverage Directory
        if: always()
        run: ls src/tests/coverage

      - name: Adjust LCOV Paths
        run: |
          if [ -f src/tests/coverage/lcov.info ]; then
            sed -i 's|SF:.*/src/|SF:src/|' src/tests/coverage/lcov.info
          else
            echo "lcov.info not found"
          fi

      - name: List Adjusted LCOV
        run: cat src/tests/coverage/lcov.info

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        if: success() || failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=WebUI-Project-Based-07-nr_Client
            -Dsonar.organization=webui-project-based-07-nr
            -Dsonar.organizationKey=webui-project-based-07-nr
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.sources=.
            -Dsonar.tests=src/tests
            -Dsonar.exclusions=**/src/tests/**/*,**/build-story/*
            -Dsonar.coverage.exclusions=**/src/constants/*,**/src/tests/**/*,**/*.styles.ts
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.javascript.lcov.reportPaths=src/tests/coverage/lcov.info
            -Dsonar.testExecutionReportPaths=test-report.xml
            -Dsonar.qualitygate.wait=true  

  Test_Docker:
    runs-on: ubuntu-latest
    steps:

      #Checkout Repository
      - uses: actions/checkout@v3
      
      # Docker Build
      - uses: docker/build-push-action@v3
        with:
          push: false
          file: ./Dockerfile
          tags: front-stage:test
          build-args: |
            password=${{ secrets.DOCKER_PASS }}
            
